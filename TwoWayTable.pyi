from typing import Dict, Iterator

class TwoWayTable:
    dict1: Dict[Any, Any]
    dict2: Dict[Any, Any]

    def __init__(self, key_name: str, value_name: str, *, keylist_name: str, valuelist_name: str): ...
    def keys(self) -> List(Any): ...
    def values(self) -> List(Any): ...

class PairedDict:
    internal: dict
    partner: dict

    def __init__(self, wrapped_dict: dict, partner_dict: dict):...
    def __setitem__(self, key: Any, item: Any) -> None: ...
    def __getitem__(self, key: Any) -> Any: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> Iterator: ...
    def clear(self) -> None: ...
